name: Build, Push and Deploy

on:
  push:
    branches: [ deploy ]

env:
  REGISTRY: ghcr.io
  OWNER: supplydevelopment

jobs:
  build-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - { name: 'app', path: './supply-backend', image: 'app' }
          - { name: 'message-service', path: './email-service', image: 'email-service' }
          - { name: 'scheduled-service', path: './scheduled-service', image: 'scheduled-service' }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        working-directory: ${{ matrix.service.path }}
        run: mvn clean package -DskipTests

      - name: Docker setup
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.service.path }}
          file: ${{ matrix.service.path }}/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ matrix.service.image }}:latest
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ matrix.service.image }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate manifests
        uses: instrumenta/kubeval-action@master
        with:
          files: './kubernetes'
          strict: true
          ignore_missing_schemas: true

      - name: Deploy to cluster
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/backend/supply-backend
            git pull origin deploy
            kubectl delete deployment app -n supply-app
            kubectl delete deployment message-service -n supply-app
            kubectl delete deployment scheduled-service -n supply-app
            kubectl apply -f kubernetes/main_app_deployment.yaml
            kubectl apply -f kubernetes/email_app_deployment.yaml
            kubectl apply -f kubernetes/scheduled_app_deployment.yaml
            kubectl rollout status deployment/app -n supply-app --timeout=3m
            kubectl rollout status deployment/message-service -n supply-app --timeout=2m
            kubectl rollout status deployment/scheduled-service -n supply-app --timeout=2m